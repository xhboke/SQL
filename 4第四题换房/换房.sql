IF EXISTS (select * from sysobjects where type = 'P' and name = 'P_CHANGE_ROOM')
    DROP PROCEDURE P_CHANGE_ROOM;
GO

CREATE PROCEDURE P_CHANGE_ROOM 
	@CHECKIN_ID INT, /** ��ס�� */
	@ROOM_ID INT,  /** ׼�������ķ���� */
	@CHANGE_DATE DATE /** ���������� */
AS
BEGIN
	DECLARE @CHANGE_ID INT;	/** ������ʶ�� */
	DECLARE @CHANGE_BEFORE_ROOM_ID INT; /** ����ǰ�ķ���� */
	DECLARE @CHANGE_BEFORE_DATE DATE; /** ����ǰ����ס���� */
	SET @CHANGE_BEFORE_ROOM_ID = (SELECT ROOM_ID FROM CHECKIN WHERE CHECKIN_ID = @CHECKIN_ID);
	SET @CHANGE_BEFORE_DATE = (SELECT CHECKIN_START_TIME FROM CHECKIN WHERE CHECKIN_ID = @CHECKIN_ID);

	IF ((SELECT ROOM_STATUS_ID FROM ROOM_INFO WHERE ROOM_ID = @ROOM_ID) = 1)
	BEGIN
		UPDATE ROOM_INFO SET ROOM_STATUS_ID = 2 WHERE ROOM_ID = (SELECT ROOM_ID FROM CHECKIN WHERE CHECKIN_ID = @CHECKIN_ID);
		UPDATE CHECKIN SET ROOM_ID = @ROOM_ID WHERE CHECKIN_ID = @CHECKIN_ID;
		UPDATE ROOM_INFO SET ROOM_STATUS_ID = 4 WHERE ROOM_ID = @ROOM_ID;
		SET @CHANGE_ID = (SELECT MAX(CHANGE_ID) FROM CHANGE_ROOM);
		IF @CHANGE_ID IS NULL
		BEGIN SET @CHANGE_ID = 1; END
		ELSE
		BEGIN SET @CHANGE_ID = @CHANGE_ID + 1; END
		INSERT INTO CHANGE_ROOM VALUES(@CHANGE_ID,@CHECKIN_ID,@CHANGE_BEFORE_ROOM_ID,@ROOM_ID,@CHANGE_DATE);
	END
END